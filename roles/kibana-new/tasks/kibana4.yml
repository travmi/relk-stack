---
  - name: dependencies

  - name: check if kibana is already installed
    stat: path="{{ kibana_path }}/kibana-{{ kibana_full_version }}-linux-x64/bin/kibana"
    changed_when: false
    register: kibana_installed

  - name: get Kibana archive
    get_url: url=https://download.elastic.co/kibana/kibana/kibana-{{kibana_full_version}}-linux-x64.tar.gz dest=/tmp/kibana-{{kibana_full_version}}.tgz
    when: kibana_installed.stat.exists == false

  - name: untar kibana
    unarchive: src=/tmp/kibana-{{kibana_full_version}}.tgz dest={{kibana_path}} copy=no
    notify:
      - remove kibana archive
    when: kibana_installed.stat.exists == false

  - name: set Kibana configuration
    template: src=kibana.yml.j2 dest={{ kibana_path }}/kibana-{{ kibana_full_version }}-linux-x64/config/kibana.yml owner=nginx group=nginx mode=0644

  - name: add Kibana systemd configuration
    template: src='kibana.service' dest='/lib/systemd/system/kibana.service' owner=root group=root mode=0640

# Should added a registered variable here
# Then systemd reload only when variable changes

  - name: add Kibana systemd symlink
    file: src=/lib/systemd/system/kibana.service dest=/etc/systemd/system/multi-user.target.wants/kibana.service state=link
    notify: reload systemd

  - meta: flush_handlers
    when: "kibana_manage_service"

  - name: ensure permissions are correct
    file: path=/opt/kibana state=directory owner=nginx group=nginx recurse=yes

  - name: ensure kibana is started
    service: name=kibana runlevel=default state=started enabled=yes
    when: kibana_manage_service
